<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wangyicourse.mappers.PreOrderMapper">
  <resultMap id="BaseResultMap" type="com.wangyicourse.entity.PreOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="courseid" jdbcType="INTEGER" property="courseid" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
  </resultMap>
  <resultMap id="findcourse" type="com.wangyicourse.entity.PreOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="courseid" jdbcType="INTEGER" property="courseid" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
      <association property="course" javaType="com.wangyicourse.entity.Course" >
      <id column="coursid" jdbcType="INTEGER" property="id" />
        <result column="coursename" jdbcType="VARCHAR" property="coursename" />
        <result column="courseprice" jdbcType="DECIMAL" property="courseprice" />
        <result column="subscribenum" jdbcType="INTEGER" property="subscribenum" />
        <result column="coursehour" jdbcType="INTEGER" property="coursehour" />
        <result column="category3id" jdbcType="INTEGER" property="category3id" />
        <result column="viewsrc" jdbcType="VARCHAR" property="viewsrc" />
        <result column="publish" jdbcType="VARCHAR" property="publish" />
        <result column="discount" jdbcType="INTEGER" property="discount" />
        <result column="validtime" jdbcType="VARCHAR" property="validtime" />
        <result column="institutionid" jdbcType="INTEGER" property="institutionid" />
        <association property="institution" javaType="com.wangyicourse.entity.Institution">
          <id column="inid" jdbcType="INTEGER" property="id" />
          <result column="inname" jdbcType="VARCHAR" property="inname" />
          <result column="inpassword" jdbcType="VARCHAR" property="inpassword" />
        </association>
      </association>
  </resultMap>
  <select id="selectByUserId" resultMap="findcourse">
    select *,
    c.id coursid ,
    i.id inid
    from preorder p
    join course c on p.courseid=c.id
    join institution i on c.institutionid =i.id
    where p.userid =#{userid};
  </select>




  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, courseid, userid
  </sql>
  <select id="selectByExample" parameterType="com.wangyicourse.entity.PreOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from preorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from preorder
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from preorder
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wangyicourse.entity.PreOrderExample">
    delete from preorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wangyicourse.entity.PreOrder">
    insert into preorder (id, courseid, userid
      )
    values (#{id,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wangyicourse.entity.PreOrder">
    insert into preorder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="courseid != null">
        courseid,
      </if>
      <if test="userid != null">
        userid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wangyicourse.entity.PreOrderExample" resultType="java.lang.Long">
    select count(*) from preorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update preorder
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.courseid != null">
        courseid = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update preorder
    set id = #{record.id,jdbcType=INTEGER},
      courseid = #{record.courseid,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wangyicourse.entity.PreOrder">
    update preorder
    <set>
      <if test="courseid != null">
        courseid = #{courseid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wangyicourse.entity.PreOrder">
    update preorder
    set courseid = #{courseid,jdbcType=INTEGER},
      userid = #{userid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>